<?xml version="1.0"?>

<project name="ajax-autocomplete" default="core" basedir=".">

  <property name="module.name" value="ajax-autocomplete"/>
  
   <!-- include user specific build properties -->
  <property file="build.properties"/>

  <property file="${user.home}/build.properties"/>
    
  <!-- The destination directory for all the generated files -->
  <property name="build.dir" value="build"/>
  
  <!-- The destination directory for all the compiled classes -->
  <property name="classes.dir" value="${build.dir}/classes"/>

  <property name="home.dir" value="."/>
  <property name="src.dir" value="${home.dir}/src"/>
  <property name="web.dir" value="${home.dir}/web"/>
  <property name="src.java" value="${src.dir}/java"/>
  <property name="src.conf" value="${src.dir}/conf"/>
  <property name="jar.build.dir" value="${build.dir}/jar"/>
  <property name="war.build.dir" value="${build.dir}/war"/>
  <property name="ejb.build.dir" value="${build.dir}/ejb"/>
  <property name="ear.build.dir" value="${build.dir}/ear"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="app.war" value="${build.dir}/${module.name}.war"/>
    
    <!-- Construct Java EE classpath -->
  <path id="javaee.classpath">
    <pathelement location="${servlet.jar}"/>
  </path>

   <target name="run" depends="core, deploy, launch" />

  <target name="core" depends="compile,war" />
  
  <target name="core-deploy" depends="core,deploy" description="Build and deploy the application"/>
  
    <!-- Cleans the build directory -->
  <target name="clean" description="Removes the build directory">
    <delete dir="${build.dir}" />
  </target>
  
   <target name="compile">
    <echo>Compiling ${module.name}</echo>
   <path id="classpath">
     <pathelement location="${classes.dir}"/>
     <pathelement location="${extra.classpath}"/>
     <pathelement location="${extra2.classpath}"/>
     <path refid="javaee.classpath" />
   </path>
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.java}"
	   source="1.4"
           destdir="${classes.dir}"
           includes="**">
     <classpath refid="classpath"/>
    </javac>
  </target>
  
  <target name="getBrowser" unless="default.browser">
  
     <condition property="browser" value="rundll32">
        <os family="windows"/>
     </condition>
     
     <condition property="browser" value="/usr/bin/open">
       <and>
         <os family="mac"/>
       </and>
     </condition>

    <property name="default.browser" value="${browser}"/>
  </target>
  
  <!-- This target launches a browser for the specified URL -->
  <target name="launch" depends="getBrowser">
     <condition property="extra-args" value="url.dll,FileProtocolHandler">
        <os family="windows"/>
     </condition>
     <condition property="extra-args" value="">
        <not>
           <os family="windows"/>
        </not>
    </condition>
    <echo>Launching ${module.name}.</echo>
    <exec executable="${default.browser}" spawn="true">
      <arg line ="${extra-args} http://${javaee.server.name}:${javaee.server.port}/${module.name}" />
    </exec>
  </target>

  <target name="deploy">
    <fail unless="javaee.autodeploy.dir" message="app.module must be set before invoking this target. Otherwise there is no application to deploy."/>
    <copy file="${app.war}" todir="${javaee.autodeploy.dir}" />
    <echo>Module ${app.war} has been copied to ${javaee.autodeploy.dir}.</echo>
    <echo>The application may be loaded from the following URL in a few seconds.</echo>
  </target>


  <target name="war">
     
    <mkdir dir="${war.build.dir}"/>

    <!-- Copy in the compiled Classes -->
    <copy todir="${war.build.dir}/WEB-INF/classes">
     <fileset dir="${classes.dir}"/>
    </copy>

    <!-- Copy in the xsds-->
    <copy todir="${war.build.dir}/WEB-INF/classes" failonerror="false">
        <fileset dir="${src.java}">
           <include name="**/*.xsd"/>
        </fileset>
    </copy>
    
    <!-- Copy in the content -->
    <copy todir="${war.build.dir}">
     <fileset dir="${web.dir}"/>
    </copy>
   
    <delete file="${app.war}"/>
    <jar jarfile="${app.war}" basedir="${war.build.dir}" />
    <delete dir="${war.build.dir}"/>

  </target>
  
</project>


